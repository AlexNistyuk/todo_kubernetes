apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.auth.secret.name }}
  namespace: {{ .Values.namespace.name }}
stringData:
  {{ .Values.auth.envFile.name }}: |
    ALLOW_ORIGINS={{ .Values.auth.secret.allowOrigins }}
    ALLOW_CREDENTIALS={{ .Values.auth.secret.allowCredentials }}
    ALLOW_METHODS={{ .Values.auth.secret.allowMethods }}
    ALLOW_HEADERS={{ .Values.auth.secret.allowHeaders }}
    
    POSTGRES_HOST={{ .Values.database.secret.host }}
    POSTGRES_PORT={{ .Values.database.secret.port }}
    POSTGRES_DB={{ .Values.database.secret.name }}
    POSTGRES_USER={{ .Values.database.secret.user }}
    POSTGRES_PASSWORD={{ .Values.database.secret.password }}
    DB_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?async_fallback=True
    DB_POOL_SIZE={{ .Values.database.secret.poolSize }}
    DB_MAX_OVERFLOW={{ .Values.database.secret.maxOverflow }}
    
    JWT_SECRET_KEY={{ .Values.auth.secret.jwtSecretKey }}
    JWT_ACCESS_TOKEN_EXPIRES_IN={{ .Values.auth.secret.jwtAccessTokenExpiresIn }}
    JWT_REFRESH_TOKEN_EXPIRES_IN={{ .Values.auth.secret.jwtRefreshTokenExpiresIn }}
    JWT_ALGORITHM={{ .Values.auth.secret.jwtAlgorithm }}
    
    HTTP_AUTH_HEADER={{ .Values.auth.secret.httpAuthHeader }}
    HTTP_AUTH_KEYWORD={{ .Values.auth.secret.httpAuthKeyword }}
    
    SUPERUSER_USERNAME={{ .Values.auth.secret.superuserUsername }}
    SUPERUSER_PASSWORD={{ .Values.auth.secret.superuserPassword }}
